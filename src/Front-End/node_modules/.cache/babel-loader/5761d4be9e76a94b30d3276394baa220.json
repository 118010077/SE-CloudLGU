{"remainingRequest":"F:\\CUHKSZ\\CSC4001\\Project\\SE-CloudLGU\\src\\Front-End\\node_modules\\babel-loader\\lib\\index.js!F:\\CUHKSZ\\CSC4001\\Project\\SE-CloudLGU\\src\\Front-End\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\CUHKSZ\\CSC4001\\Project\\SE-CloudLGU\\src\\Front-End\\src\\utils\\request.js","dependencies":[{"path":"F:\\CUHKSZ\\CSC4001\\Project\\SE-CloudLGU\\src\\Front-End\\src\\utils\\request.js","mtime":1650297032242},{"path":"F:\\CUHKSZ\\CSC4001\\Project\\SE-CloudLGU\\src\\Front-End\\babel.config.js","mtime":1650206385790},{"path":"F:\\CUHKSZ\\CSC4001\\Project\\SE-CloudLGU\\src\\Front-End\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1650207855744},{"path":"F:\\CUHKSZ\\CSC4001\\Project\\SE-CloudLGU\\src\\Front-End\\node_modules\\babel-loader\\lib\\index.js","mtime":1650207856467},{"path":"F:\\CUHKSZ\\CSC4001\\Project\\SE-CloudLGU\\src\\Front-End\\node_modules\\eslint-loader\\index.js","mtime":1650207855929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IHsgTWVzc2FnZUJveCwgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7CmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsgLy8gY3JlYXRlIGFuIGF4aW9zIGluc3RhbmNlCgp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgLy8gYmFzZVVSTDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSSwgLy8gdXJsID0gYmFzZSB1cmwgKyByZXF1ZXN0IHVybCAvL3Byb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEkgPSAvZGV2LWFwaQogIC8vIHdpdGhDcmVkZW50aWFsczogdHJ1ZSwgLy8gc2VuZCBjb29raWVzIHdoZW4gY3Jvc3MtZG9tYWluIHJlcXVlc3RzCiAgYmFzZVVSTDogJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMCcsCiAgdGltZW91dDogMTAwMDAgLy8gcmVxdWVzdCB0aW1lb3V0Cgp9KTsKLyoNCi8vIHJlcXVlc3QgaW50ZXJjZXB0b3INCnNlcnZpY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKA0KICBjb25maWcgPT4gew0KICAgIC8vIGRvIHNvbWV0aGluZyBiZWZvcmUgcmVxdWVzdCBpcyBzZW50DQoNCiAgICBpZiAoc3RvcmUuZ2V0dGVycy50b2tlbikgew0KICAgICAgLy8gbGV0IGVhY2ggcmVxdWVzdCBjYXJyeSB0b2tlbg0KICAgICAgLy8gWydYLVRva2VuJ10gaXMgYSBjdXN0b20gaGVhZGVycyBrZXkNCiAgICAgIC8vIHBsZWFzZSBtb2RpZnkgaXQgYWNjb3JkaW5nIHRvIHRoZSBhY3R1YWwgc2l0dWF0aW9uDQogICAgICBjb25maWcuaGVhZGVyc1snWC1Ub2tlbiddID0gZ2V0VG9rZW4oKQ0KICAgIH0NCiAgICByZXR1cm4gY29uZmlnDQogIH0sDQogIGVycm9yID0+IHsNCiAgICAvLyBkbyBzb21ldGhpbmcgd2l0aCByZXF1ZXN0IGVycm9yDQogICAgY29uc29sZS5sb2coZXJyb3IpIC8vIGZvciBkZWJ1Zw0KICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcikNCiAgfQ0KKQ0KDQovLyByZXNwb25zZSBpbnRlcmNlcHRvcg0Kc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKA0KICAvKioNCiAgICogSWYgeW91IHdhbnQgdG8gZ2V0IGh0dHAgaW5mb3JtYXRpb24gc3VjaCBhcyBoZWFkZXJzIG9yIHN0YXR1cw0KICAgKiBQbGVhc2UgcmV0dXJuICByZXNwb25zZSA9PiByZXNwb25zZQ0KICAqLwoKLyoqDQogICAqIERldGVybWluZSB0aGUgcmVxdWVzdCBzdGF0dXMgYnkgY3VzdG9tIGNvZGUNCiAgICogSGVyZSBpcyBqdXN0IGFuIGV4YW1wbGUNCiAgICogWW91IGNhbiBhbHNvIGp1ZGdlIHRoZSBzdGF0dXMgYnkgSFRUUCBTdGF0dXMgQ29kZQ0KICAgKi8KCi8qDQpyZXNwb25zZSA9PiB7DQpjb25zdCByZXMgPSByZXNwb25zZS5kYXRhDQogLy8gaWYgdGhlIGN1c3RvbSBjb2RlIGlzIG5vdCAyMDAwMCwgaXQgaXMganVkZ2VkIGFzIGFuIGVycm9yLg0KaWYgKHJlcy5jb2RlICE9PSAyMDAwMCkgew0KIE1lc3NhZ2Uoew0KICAgbWVzc2FnZTogcmVzLm1lc3NhZ2UgfHwgJ0Vycm9yJywNCiAgIHR5cGU6ICdlcnJvcicsDQogICBkdXJhdGlvbjogNSAqIDEwMDANCiB9KQ0KICAgLy8gNTAwMDg6IElsbGVnYWwgdG9rZW47IDUwMDEyOiBPdGhlciBjbGllbnRzIGxvZ2dlZCBpbjsgNTAwMTQ6IFRva2VuIGV4cGlyZWQ7DQogaWYgKHJlcy5jb2RlID09PSA1MDAwOCB8fCByZXMuY29kZSA9PT0gNTAwMTIgfHwgcmVzLmNvZGUgPT09IDUwMDE0KSB7DQogICAvLyB0byByZS1sb2dpbg0KICAgTWVzc2FnZUJveC5jb25maXJtKCdZb3UgaGF2ZSBiZWVuIGxvZ2dlZCBvdXQsIHlvdSBjYW4gY2FuY2VsIHRvIHN0YXkgb24gdGhpcyBwYWdlLCBvciBsb2cgaW4gYWdhaW4nLCAnQ29uZmlybSBsb2dvdXQnLCB7DQogICAgIGNvbmZpcm1CdXR0b25UZXh0OiAnUmUtTG9naW4nLA0KICAgICBjYW5jZWxCdXR0b25UZXh0OiAnQ2FuY2VsJywNCiAgICAgdHlwZTogJ3dhcm5pbmcnDQogICB9KS50aGVuKCgpID0+IHsNCiAgICAgc3RvcmUuZGlzcGF0Y2goJ3VzZXIvcmVzZXRUb2tlbicpLnRoZW4oKCkgPT4gew0KICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpDQogICAgIH0pDQogICB9KQ0KIH0NCiByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5tZXNzYWdlIHx8ICdFcnJvcicpKQ0KfSBlbHNlIHsNCiByZXR1cm4gcmVzDQp9DQp9LA0KZXJyb3IgPT4gew0KY29uc29sZS5sb2coJ2VycicgKyBlcnJvcikgLy8gZm9yIGRlYnVnDQpNZXNzYWdlKHsNCiBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLA0KIHR5cGU6ICdlcnJvcicsDQogZHVyYXRpb246IDUgKiAxMDAwDQp9KQ0KcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKQ0KfQ0KKQ0KKi8KCmV4cG9ydCBkZWZhdWx0IHNlcnZpY2U7"},{"version":3,"sources":["F:/CUHKSZ/CSC4001/Project/SE-CloudLGU/src/Front-End/src/utils/request.js"],"names":["axios","MessageBox","Message","store","getToken","service","create","baseURL","timeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,YAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;;AACA,IAAMC,OAAO,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC3B;AACA;AACAC,EAAAA,OAAO,EAAE,uBAHkB;AAI3BC,EAAAA,OAAO,EAAE,KAJkB,CAIZ;;AAJY,CAAb,CAAhB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeH,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { MessageBox, Message } from 'element-ui'\r\nimport store from '@/store'\r\nimport { getToken } from '@/utils/auth'\r\n\r\n// create an axios instance\r\nconst service = axios.create({\r\n  // baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url //process.env.VUE_APP_BASE_API = /dev-api\r\n  // withCredentials: true, // send cookies when cross-domain requests\r\n  baseURL: 'http://127.0.0.1:8000',\r\n  timeout: 10000 // request timeout\r\n})\r\n\r\n/*\r\n// request interceptor\r\nservice.interceptors.request.use(\r\n  config => {\r\n    // do something before request is sent\r\n\r\n    if (store.getters.token) {\r\n      // let each request carry token\r\n      // ['X-Token'] is a custom headers key\r\n      // please modify it according to the actual situation\r\n      config.headers['X-Token'] = getToken()\r\n    }\r\n    return config\r\n  },\r\n  error => {\r\n    // do something with request error\r\n    console.log(error) // for debug\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// response interceptor\r\nservice.interceptors.response.use(\r\n  /**\r\n   * If you want to get http information such as headers or status\r\n   * Please return  response => response\r\n  */\r\n\r\n/**\r\n   * Determine the request status by custom code\r\n   * Here is just an example\r\n   * You can also judge the status by HTTP Status Code\r\n   *//*\r\n  response => {\r\n    const res = response.data\r\n\r\n    // if the custom code is not 20000, it is judged as an error.\r\n    if (res.code !== 20000) {\r\n      Message({\r\n        message: res.message || 'Error',\r\n        type: 'error',\r\n        duration: 5 * 1000\r\n      })\r\n\r\n      // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\r\n      if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\r\n        // to re-login\r\n        MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\r\n          confirmButtonText: 'Re-Login',\r\n          cancelButtonText: 'Cancel',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          store.dispatch('user/resetToken').then(() => {\r\n            location.reload()\r\n          })\r\n        })\r\n      }\r\n      return Promise.reject(new Error(res.message || 'Error'))\r\n    } else {\r\n      return res\r\n    }\r\n  },\r\n  error => {\r\n    console.log('err' + error) // for debug\r\n    Message({\r\n      message: error.message,\r\n      type: 'error',\r\n      duration: 5 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n*/\r\nexport default service\r\n"]}]}